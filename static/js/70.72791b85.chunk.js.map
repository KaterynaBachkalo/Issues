{"version":3,"file":"static/js/70.72791b85.chunk.js","mappings":"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","sources":["components/IssuesList.tsx","components/FormSearch.tsx","components/Home.tsx","pages/HomePage.tsx"],"sourcesContent":["import { Box, Flex, Text } from \"@chakra-ui/react\";\nimport { css } from \"@emotion/react\";\nimport { FC } from \"react\";\n\ninterface IProps {\n  data: [];\n}\n\nconst IssuesList: FC<IProps> = ({ data }) => {\n  console.log(data);\n\n  const boxStyles = css`\n    width: calc(1280px / 2 - 2 * 20px);\n    text-align: center;\n  `;\n\n  return (\n    <Flex gap={5}>\n      <Box css={boxStyles}>\n        <Text mb={5}>ToDo</Text>\n        <Box\n          textAlign=\"center\"\n          border=\"1px solid black\"\n          bgColor=\"gray.300\"\n        ></Box>\n      </Box>\n      <Box css={boxStyles}>\n        <Text mb={5}>In Progress</Text>\n        <Box\n          textAlign=\"center\"\n          border=\"1px solid black\"\n          bgColor=\"gray.300\"\n        ></Box>\n      </Box>\n      <Box css={boxStyles}>\n        <Text mb={5}>Done</Text>\n        <Box\n          textAlign=\"center\"\n          border=\"1px solid black\"\n          bgColor=\"gray.300\"\n        ></Box>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default IssuesList;\n","import { Formik, Field, Form, FieldProps } from \"formik\";\nimport { FC, useState } from \"react\";\nimport { css } from \"@emotion/react\";\nimport {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormErrorMessage,\n  Input,\n  Text,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { StarIcon } from \"@chakra-ui/icons\";\nimport IssuesList from \"./IssuesList\";\n\ninterface IForms {\n  url: string;\n}\n\ninterface IRepoData {\n  name: string;\n  owner: {\n    login: string;\n  };\n  stargazers_count: number;\n}\n\nconst FormSearch: FC = () => {\n  const [repoData, setRepoData] = useState<IRepoData | null>(null);\n  const [issuesArr, setIssuesArr] = useState<[]>([]);\n  const [error, setError] = useState<string | null>(null);\n\n  const initialValues: IForms = { url: \"\" };\n\n  const onSubmit = async (values: { url: string }, { resetForm }: any) => {\n    const { url } = values;\n    try {\n      // Виділяємо власника та ім'я репозиторію з URL\n      const regex = /https:\\/\\/github.com\\/([^/]+)\\/([^/]+)/;\n      const match = regex.exec(url);\n      if (!match) {\n        return setError(\"Invalid GitHub repository URL\");\n      }\n\n      const [, owner, repo] = match;\n\n      // Виконати запит до GitHub API для отримання даних репозиторію\n      const response = await axios.get(\n        `https://api.github.com/repos/${owner}/${repo}`,\n\n        {\n          headers: {\n            Authorization: `${process.env.REACT_APP_ISSUES_TOKEN}`,\n          },\n        }\n      );\n      // Виконати запит до GitHub API для отримання даних issues\n\n      const responseIssues = await axios.get(\n        `https://api.github.com/repos/${owner}/${repo}/issues`,\n        {\n          headers: {\n            Authorization: `${process.env.REACT_APP_ISSUES_TOKEN}`,\n          },\n        }\n      );\n      setRepoData(response.data);\n      setIssuesArr(responseIssues.data);\n      setError(null);\n    } catch (error) {\n      console.error(\"Failed to fetch repository data:\", error);\n      setError(\"Invalid GitHub repository URL\");\n    }\n    resetForm();\n  };\n\n  const formStyles = css`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 20px;\n    position: relative;\n    margin-bottom: 10px;\n  `;\n\n  const inputStyles = css`\n    width: 100%;\n    padding: 10px;\n    border: 2px solid black;\n    border-radius: 8px;\n    box-shadow: 2px 2px 2px #ccc;\n    font-family: \"Handwriting\", sans-serif;\n    font-size: 16px;\n    line-height: 1.25;\n  `;\n\n  const buttonStyles = css`\n    background-color: #f2f2f2;\n    border: 2px solid black;\n    border-radius: 8px;\n    padding: 10px 20px;\n    font-family: \"Handwriting\", sans-serif;\n    box-shadow: 2px 2px 2px #ccc;\n    cursor: pointer;\n  `;\n\n  function validateName(value: string) {\n    let error;\n    if (!value) {\n      error = \"URL is required\";\n    }\n    return error;\n  }\n\n  const ownerName =\n    repoData &&\n    repoData.owner.login.charAt(0).toUpperCase() +\n      repoData.owner.login.slice(1).toLowerCase();\n\n  const nameRepo =\n    repoData &&\n    repoData.name.charAt(0).toUpperCase() +\n      repoData.name.slice(1).toLowerCase();\n\n  const stars = repoData && Math.round(repoData.stargazers_count / 1000);\n\n  return (\n    <>\n      <Formik initialValues={initialValues} onSubmit={onSubmit}>\n        {() => (\n          <Form>\n            <Box css={formStyles}>\n              <Field name=\"url\" validate={validateName}>\n                {({ field, form }: FieldProps) => (\n                  <FormControl\n                    isInvalid={!!form.errors.name && !!form.touched.name}\n                  >\n                    <Input\n                      {...field}\n                      placeholder=\"Enter repo URL\"\n                      css={inputStyles}\n                    />\n                    {typeof form.errors.name === \"string\" && (\n                      <FormErrorMessage>{form.errors.name}</FormErrorMessage>\n                    )}\n                  </FormControl>\n                )}\n              </Field>\n              <Button type=\"submit\" css={buttonStyles}>\n                Load issues\n              </Button>\n            </Box>\n          </Form>\n        )}\n      </Formik>\n      {repoData && (\n        <Flex alignItems=\"center\" mb={12}>\n          <Text color=\"blue.500\" fontWeight=\"700\" mr={5}>\n            {ownerName} {\">\"} {nameRepo}\n          </Text>\n          <StarIcon color=\"orange.300\" mr={1} />\n          <Text fontWeight=\"700\">{stars} K stars</Text>\n        </Flex>\n      )}\n      {error && <Text color=\"red.500\">{error}</Text>}\n      {repoData && <IssuesList data={issuesArr} />}\n    </>\n  );\n};\n\nexport default FormSearch;\n","import { Container } from \"@chakra-ui/react\";\nimport FormSearch from \"./FormSearch\";\n\nconst Home = () => {\n  return (\n    <Container as=\"section\" maxW=\"container.xl\" p={5}>\n      <FormSearch />\n    </Container>\n  );\n};\n\nexport default Home;\n","import Home from \"../components/Home\";\n\nconst HomePage = () => {\n  return (\n    <>\n      <Home />\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["_ref","data","console","log","boxStyles","css","_templateObject","_taggedTemplateLiteral","_jsxs","Flex","gap","children","Box","_jsx","Text","mb","textAlign","border","bgColor","FormSearch","repoData","setRepoData","useState","issuesArr","setIssuesArr","error","setError","formStyles","inputStyles","_templateObject2","buttonStyles","_templateObject3","validateName","value","ownerName","owner","login","charAt","toUpperCase","slice","toLowerCase","nameRepo","name","stars","Math","round","stargazers_count","_Fragment","Formik","initialValues","url","onSubmit","async","values","resetForm","match","exec","repo","response","axios","get","concat","headers","Authorization","process","REACT_APP_ISSUES_TOKEN","responseIssues","Form","Field","validate","_ref2","field","form","FormControl","isInvalid","errors","touched","Input","placeholder","FormErrorMessage","Button","type","alignItems","color","fontWeight","mr","StarIcon","IssuesList","Home","Container","as","maxW","p","HomePage"],"sourceRoot":""}