{"version":3,"file":"static/js/70.ab4dd9b1.chunk.js","mappings":"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","sources":["components/IssuesList.tsx","components/FormSearch.tsx","components/Home.tsx","pages/HomePage.tsx"],"sourcesContent":["import {\n  Box,\n  Flex,\n  Link,\n  ListItem,\n  Text,\n  UnorderedList,\n  theme,\n} from \"@chakra-ui/react\";\nimport { css } from \"@emotion/react\";\nimport { FC } from \"react\";\n\ninterface IProps {\n  open: Arr[];\n  close: Arr[];\n}\n\ninterface Arr {\n  id: number;\n  pull_request: {};\n  state: string;\n  title: string;\n  number: number;\n  created_at: string;\n  user: {\n    login: string;\n    html_url: string;\n  };\n  comments: number;\n  assignee: {} | null;\n}\n\nconst IssuesList: FC<IProps> = ({ open, close }) => {\n  const stroke = css`\n    display: inline;\n    font-size: 16px;\n    border: 1px solid rgba(17, 16, 28, 0.3);\n    margin: 0 10px;\n    height: 16px;\n  `;\n\n  const openIssues = open.filter((obj) => !obj.hasOwnProperty(\"pull_request\"));\n\n  const closedIssues = close.filter(\n    (obj) => !obj.hasOwnProperty(\"pull_request\")\n  );\n\n  const assigneeIssues = openIssues.filter((i) => i.assignee !== null);\n\n  return (\n    <Flex gap={5}>\n      <Box\n        width={`calc(${theme.sizes.container.xl} / 2 - 2 * 20px)`}\n        textAlign=\"center\"\n      >\n        <Text mb={5} fontWeight=\"700\" as=\"h2\">\n          ToDo\n        </Text>\n        <UnorderedList\n          display=\"flex\"\n          flexDirection=\"column\"\n          gap={5}\n          textAlign=\"center\"\n          border=\"1px solid black\"\n          bgColor=\"gray.300\"\n          color=\"gray.500\"\n          p={5}\n          m={0}\n        >\n          {openIssues?.map((item) => (\n            <ListItem\n              key={item.id}\n              bgColor=\"white\"\n              borderRadius={20}\n              border=\"1px solid black\"\n              listStyleType=\"none\"\n              p={4}\n            >\n              <Text fontWeight=\"700\" textAlign=\"start\" color=\"gray.800\">\n                {item.title}\n              </Text>\n              <Text textAlign=\"start\">\n                #{item.number} opened{\" \"}\n                {Math.floor(\n                  (new Date().getTime() - new Date(item.created_at).getTime()) /\n                    (3600 * 24 * 1000)\n                )}{\" \"}\n                days ago\n              </Text>\n              <Flex alignItems=\"center\">\n                <Link\n                  href={item.user.html_url}\n                  target=\"blank\"\n                  _hover={{ textDecoration: \"none\" }}\n                >\n                  {item.user.login}\n                </Link>\n                <Text css={stroke}></Text>\n                <Text>Comments: {item.comments}</Text>\n              </Flex>\n            </ListItem>\n          ))}\n        </UnorderedList>\n      </Box>\n      <Box\n        width={`calc(${theme.sizes.container.xl} / 2 - 2 * 20px)`}\n        textAlign=\"center\"\n      >\n        <Text mb={5} fontWeight=\"700\" as=\"h2\">\n          In Progress\n        </Text>\n        <UnorderedList\n          display=\"flex\"\n          flexDirection=\"column\"\n          gap={5}\n          textAlign=\"center\"\n          border=\"1px solid black\"\n          bgColor=\"gray.300\"\n          color=\"gray.500\"\n          p={5}\n          m={0}\n        >\n          {assigneeIssues?.map((item) => (\n            <ListItem\n              key={item.id}\n              bgColor=\"white\"\n              borderRadius={20}\n              border=\"1px solid black\"\n              listStyleType=\"none\"\n              p={4}\n            >\n              <Text fontWeight=\"700\" textAlign=\"start\" color=\"gray.800\">\n                {item.title}\n              </Text>\n              <Text textAlign=\"start\">\n                #{item.number} opened{\" \"}\n                {Math.floor(\n                  (new Date().getTime() - new Date(item.created_at).getTime()) /\n                    (3600 * 24 * 1000)\n                )}{\" \"}\n                days ago\n              </Text>\n              <Flex alignItems=\"center\">\n                <Link\n                  href={item.user.html_url}\n                  target=\"blank\"\n                  _hover={{ textDecoration: \"none\" }}\n                >\n                  {item.user.login}\n                </Link>\n                <Text css={stroke}></Text>\n                <Text>Comments: {item.comments}</Text>\n              </Flex>\n            </ListItem>\n          ))}\n        </UnorderedList>\n      </Box>\n      <Box\n        width={`calc(${theme.sizes.container.xl} / 2 - 2 * 20px)`}\n        textAlign=\"center\"\n      >\n        <Text mb={5} fontWeight=\"700\" as=\"h2\">\n          Done\n        </Text>\n        <UnorderedList\n          display=\"flex\"\n          flexDirection=\"column\"\n          gap={5}\n          textAlign=\"center\"\n          border=\"1px solid black\"\n          bgColor=\"gray.300\"\n          color=\"gray.500\"\n          p={5}\n          m={0}\n        >\n          {closedIssues?.map((item) => (\n            <ListItem\n              key={item.id}\n              bgColor=\"white\"\n              borderRadius={20}\n              border=\"1px solid black\"\n              listStyleType=\"none\"\n              p={4}\n            >\n              <Text fontWeight=\"700\" textAlign=\"start\" color=\"gray.800\">\n                {item.title}\n              </Text>\n              <Text textAlign=\"start\">\n                #{item.number} opened{\" \"}\n                {Math.floor(\n                  (new Date().getTime() - new Date(item.created_at).getTime()) /\n                    (3600 * 24 * 1000)\n                )}{\" \"}\n                days ago\n              </Text>\n              <Flex alignItems=\"center\">\n                <Link\n                  href={item.user.html_url}\n                  target=\"blank\"\n                  _hover={{ textDecoration: \"none\" }}\n                >\n                  {item.user.login}\n                </Link>\n                <Text css={stroke}></Text>\n                <Text>Comments: {item.comments}</Text>\n              </Flex>\n            </ListItem>\n          ))}\n        </UnorderedList>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default IssuesList;\n","import { Formik, Field, Form, FieldProps } from \"formik\";\nimport { FC, useState } from \"react\";\nimport {\n  Button,\n  Flex,\n  FormControl,\n  FormErrorMessage,\n  Input,\n  Link,\n  Text,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { StarIcon } from \"@chakra-ui/icons\";\nimport IssuesList from \"./IssuesList\";\n\ninterface IForms {\n  url: string;\n}\n\ninterface IRepoData {\n  name: string;\n  html_url: string;\n  owner: {\n    login: string;\n    html_url: string;\n  };\n  stargazers_count: number;\n}\n\nconst FormSearch: FC = () => {\n  const [repoData, setRepoData] = useState<IRepoData | null>(null);\n  const [issuesOpenArr, setIssuesOpenArr] = useState<[]>([]);\n  const [issuesClosedArr, setIssuesClosedArr] = useState<[]>([]);\n  const [error, setError] = useState<string | null>(null);\n\n  const initialValues: IForms = { url: \"\" };\n\n  const onSubmit = async (values: { url: string }, { resetForm }: any) => {\n    const { url } = values;\n    try {\n      const regex = /https:\\/\\/github.com\\/([^/]+)\\/([^/]+)/;\n      const match = regex.exec(url);\n      if (!match) {\n        return setError(\"Invalid GitHub repository URL\");\n      }\n\n      const [, owner, repo] = match;\n\n      const response = await axios.get(\n        `https://api.github.com/repos/${owner}/${repo}`,\n\n        {\n          headers: {\n            Authorization: `${process.env.REACT_APP_ISSUES_TOKEN}`,\n          },\n        }\n      );\n\n      const responseIssuesOpen = await axios.get(\n        `https://api.github.com/repos/${owner}/${repo}/issues?state=open&per_page=100`,\n        {\n          headers: {\n            Authorization: `${process.env.REACT_APP_ISSUES_TOKEN}`,\n          },\n        }\n      );\n\n      const responseIssuesClosed = await axios.get(\n        `https://api.github.com/repos/${owner}/${repo}/issues?state=closed&per_page=100`,\n        {\n          headers: {\n            Authorization: `${process.env.REACT_APP_ISSUES_TOKEN}`,\n          },\n        }\n      );\n      setRepoData(response.data);\n      setIssuesOpenArr(responseIssuesOpen.data);\n      setIssuesClosedArr(responseIssuesClosed.data);\n      setError(null);\n    } catch (error) {\n      console.error(\"Failed to fetch repository data:\", error);\n      setError(\"Invalid GitHub repository URL\");\n    }\n    resetForm();\n  };\n\n  function validateName(value: string) {\n    let error;\n    if (!value) {\n      error = \"URL is required\";\n    }\n    return error;\n  }\n\n  const ownerName =\n    repoData &&\n    repoData.owner.login.charAt(0).toUpperCase() +\n      repoData.owner.login.slice(1).toLowerCase();\n\n  const nameRepo =\n    repoData &&\n    repoData.name.charAt(0).toUpperCase() +\n      repoData.name.slice(1).toLowerCase();\n\n  const stars = repoData && Math.round(repoData.stargazers_count / 1000);\n\n  return (\n    <>\n      <Formik initialValues={initialValues} onSubmit={onSubmit}>\n        {() => (\n          <Form>\n            <Flex\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              gap={5}\n              mb={3}\n              position=\"relative\"\n            >\n              <Field name=\"url\" validate={validateName}>\n                {({ field, form }: FieldProps) => (\n                  <FormControl\n                    isInvalid={!!form.errors.name && !!form.touched.name}\n                  >\n                    <Input\n                      {...field}\n                      placeholder=\"Enter repo URL\"\n                      width=\"100%\"\n                      p={3}\n                      border=\"2px solid #000\"\n                      borderRadius={8}\n                      boxShadow=\"2px 2px 2px #ccc\"\n                      bgColor=\"#f2f2f2\"\n                    />\n                    {typeof form.errors.name === \"string\" && (\n                      <FormErrorMessage>{form.errors.name}</FormErrorMessage>\n                    )}\n                  </FormControl>\n                )}\n              </Field>\n              <Button\n                type=\"submit\"\n                border=\"2px solid #000\"\n                borderRadius={8}\n                boxShadow=\"2px 2px 2px #ccc\"\n                bgColor=\"#f2f2f2\"\n                padding=\"10px 20px\"\n              >\n                Load issues\n              </Button>\n            </Flex>\n          </Form>\n        )}\n      </Formik>\n      {repoData && (\n        <Flex alignItems=\"center\" mb={12}>\n          <Text color=\"blue.500\" fontWeight=\"700\" mr={5}>\n            <Link\n              href={repoData.owner.html_url}\n              target=\"blank\"\n              _hover={{ textDecoration: \"none\" }}\n            >\n              {ownerName}\n            </Link>{\" \"}\n            {\">\"}{\" \"}\n            <Link\n              href={repoData.html_url}\n              target=\"blank\"\n              _hover={{ textDecoration: \"none\" }}\n            >\n              {nameRepo}\n            </Link>\n          </Text>\n          <StarIcon color=\"orange.300\" mr={1} />\n          <Text fontWeight=\"700\">{stars} K stars</Text>\n        </Flex>\n      )}\n      {error && <Text color=\"red.500\">{error}</Text>}\n      {repoData && <IssuesList open={issuesOpenArr} close={issuesClosedArr} />}\n    </>\n  );\n};\n\nexport default FormSearch;\n","import { Container, Text } from \"@chakra-ui/react\";\nimport FormSearch from \"./FormSearch\";\n\nconst Home = () => {\n  return (\n    <Container as=\"section\" maxW=\"container.xl\" p={5}>\n      <Text as=\"h1\" fontSize=\"2xl\" fontWeight=\"bold\" mb={10}>\n        GitHub Issue Management Board\n      </Text>\n      <FormSearch />\n    </Container>\n  );\n};\n\nexport default Home;\n","import Home from \"../components/Home\";\n\nconst HomePage = () => {\n  return (\n    <>\n      <Home />\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["_ref","open","close","stroke","css","_templateObject","_taggedTemplateLiteral","openIssues","filter","obj","hasOwnProperty","closedIssues","assigneeIssues","i","assignee","_jsxs","Flex","gap","children","Box","width","concat","theme","sizes","container","xl","textAlign","_jsx","Text","mb","fontWeight","as","UnorderedList","display","flexDirection","border","bgColor","color","p","m","map","item","ListItem","borderRadius","listStyleType","title","number","Math","floor","Date","getTime","created_at","alignItems","Link","href","user","html_url","target","_hover","textDecoration","login","comments","id","FormSearch","repoData","setRepoData","useState","issuesOpenArr","setIssuesOpenArr","issuesClosedArr","setIssuesClosedArr","error","setError","validateName","value","ownerName","owner","charAt","toUpperCase","slice","toLowerCase","nameRepo","name","stars","round","stargazers_count","_Fragment","Formik","initialValues","url","onSubmit","async","values","resetForm","match","exec","repo","response","axios","get","headers","Authorization","process","REACT_APP_ISSUES_TOKEN","responseIssuesOpen","responseIssuesClosed","data","console","Form","justifyContent","position","Field","validate","_ref2","field","form","FormControl","isInvalid","errors","touched","Input","placeholder","boxShadow","FormErrorMessage","Button","type","padding","mr","StarIcon","IssuesList","Home","Container","maxW","fontSize","HomePage"],"sourceRoot":""}