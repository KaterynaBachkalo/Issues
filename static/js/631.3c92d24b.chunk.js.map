{"version":3,"file":"static/js/631.3c92d24b.chunk.js","mappings":"mTAEO,MAAMA,EAAkBC,GAC7BA,EAAMC,OAAOC,SAEFC,EAAoBH,GAC/BA,EAAMC,OAAOG,WAEFC,EAAwBL,GACnCA,EAAMC,OAAOK,eAEFC,EAAsBP,GACjCA,EAAMC,OAAOO,aAKFC,EAAeT,GAA8BA,EAAMC,OAAOS,M,eCYvE,MA4LA,EA5L+BC,IAAsB,IAArB,KAAEC,EAAI,MAAEC,GAAOF,EAC7C,MAAMG,GAAWC,EAAAA,EAAAA,MAEXX,GAAaY,EAAAA,EAAAA,IAAYb,GACzBK,GAAeQ,EAAAA,EAAAA,IAAYT,GAC3BD,GAAiBU,EAAAA,EAAAA,IAAYX,GAE7BY,GAASC,EAAAA,EAAAA,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+IAQlBC,EAAAA,EAAAA,YAAU,KACR,MAAMjB,EAAaQ,EAAKU,QACrBC,IAASA,EAAIC,eAAe,kBAE/BV,GAASW,EAAAA,EAAAA,IAAcrB,IAEvB,MAAMI,EAAeK,EAAMS,QACxBC,IAASA,EAAIC,eAAe,kBAE/BV,GAASY,EAAAA,EAAAA,IAAgBlB,IAEzB,MAAMF,EAAiBF,EAAWkB,QAAQK,GAAqB,OAAfA,EAAEC,WAClDd,GAASe,EAAAA,EAAAA,IAAkBvB,GAAgB,GAC1C,CAACO,EAAOD,EAAME,IAEjB,MAAMgB,EAAoBC,OAAOC,YAAc,IAAO,OAAS,SAE/D,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,IAAK,EAAGC,SAAUN,EAAkBO,SAAA,EACxCJ,EAAAA,EAAAA,MAACK,EAAAA,GAAG,CAACC,KAAK,IAAIC,UAAU,SAASC,SAAS,QAAOJ,SAAA,EAC/CK,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,GAAI,EAAGC,WAAW,MAAMC,GAAG,KAAIT,SAAC,UAGtCK,EAAAA,EAAAA,KAACK,EAAAA,GAAa,CACZC,QAAQ,OACRC,cAAc,SACdd,IAAK,EACLK,UAAU,SACVU,OAAO,kBACPC,QAAQ,WACRC,MAAM,WACNC,EAAG,EACHC,EAAG,EAAEjB,SAEM,OAAVjC,QAAU,IAAVA,OAAU,EAAVA,EAAYmD,KAAKC,IAChBvB,EAAAA,EAAAA,MAACwB,EAAAA,GAAQ,CAEPN,QAAQ,QACRO,aAAc,GACdR,OAAO,kBACPS,cAAc,OACdN,EAAG,EAAEhB,SAAA,EAELK,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACE,WAAW,MAAML,UAAU,QAAQY,MAAM,WAAUf,SACtDmB,EAAKI,SAER3B,EAAAA,EAAAA,MAACU,EAAAA,EAAI,CAACH,UAAU,QAAOH,SAAA,CAAC,IACpBmB,EAAKK,OAAO,UAAQ,IACrBC,KAAKC,QACH,IAAIC,MAAOC,UAAY,IAAID,KAAKR,EAAKU,YAAYD,WAAS,OAE1D,IAAI,eAGThC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACiC,WAAW,SAAS/B,SAAS,OAAMC,SAAA,EACvCK,EAAAA,EAAAA,KAAC0B,EAAAA,EAAI,CACHC,KAAMb,EAAKc,KAAKC,SAChBC,OAAO,QACPC,OAAQ,CAAEC,eAAgB,QAASrC,SAElCmB,EAAKc,KAAKK,SAEbjC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACzB,IAAKD,KACXgB,EAAAA,EAAAA,MAACU,EAAAA,EAAI,CAAAN,SAAA,CAAC,aAAWmB,EAAKoB,iBA3BnBpB,EAAKqB,YAiClB5C,EAAAA,EAAAA,MAACK,EAAAA,GAAG,CAACC,KAAK,IAAIC,UAAU,SAASC,SAAS,QAAOJ,SAAA,EAC/CK,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,GAAI,EAAGC,WAAW,MAAMC,GAAG,KAAIT,SAAC,iBAGtCK,EAAAA,EAAAA,KAACK,EAAAA,GAAa,CACZC,QAAQ,OACRC,cAAc,SACdd,IAAK,EACLK,UAAU,SACVU,OAAO,kBACPC,QAAQ,WACRC,MAAM,WACNC,EAAG,EACHC,EAAG,EAAEjB,SAEU,OAAd/B,QAAc,IAAdA,OAAc,EAAdA,EAAgBiD,KAAKC,IACpBvB,EAAAA,EAAAA,MAACwB,EAAAA,GAAQ,CAEPN,QAAQ,QACRO,aAAc,GACdR,OAAO,kBACPS,cAAc,OACdN,EAAG,EAAEhB,SAAA,EAELK,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACE,WAAW,MAAML,UAAU,QAAQY,MAAM,WAAUf,SACtDmB,EAAKI,SAER3B,EAAAA,EAAAA,MAACU,EAAAA,EAAI,CAACH,UAAU,QAAOH,SAAA,CAAC,IACpBmB,EAAKK,OAAO,UAAQ,IACrBC,KAAKC,QACH,IAAIC,MAAOC,UAAY,IAAID,KAAKR,EAAKU,YAAYD,WAAS,OAE1D,IAAI,eAGThC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACiC,WAAW,SAAS/B,SAAS,OAAMC,SAAA,EACvCK,EAAAA,EAAAA,KAAC0B,EAAAA,EAAI,CACHC,KAAMb,EAAKc,KAAKC,SAChBC,OAAO,QACPC,OAAQ,CAAEC,eAAgB,QAASrC,SAElCmB,EAAKc,KAAKK,SAEbjC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACzB,IAAKD,KACXgB,EAAAA,EAAAA,MAACU,EAAAA,EAAI,CAAAN,SAAA,CAAC,aAAWmB,EAAKoB,iBA3BnBpB,EAAKqB,YAiClB5C,EAAAA,EAAAA,MAACK,EAAAA,GAAG,CAACC,KAAK,IAAIC,UAAU,SAASC,SAAS,QAAOJ,SAAA,EAC/CK,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,GAAI,EAAGC,WAAW,MAAMC,GAAG,KAAIT,SAAC,UAGtCK,EAAAA,EAAAA,KAACK,EAAAA,GAAa,CACZC,QAAQ,OACRC,cAAc,SACdd,IAAK,EACLK,UAAU,SACVU,OAAO,kBACPC,QAAQ,WACRC,MAAM,WACNC,EAAG,EACHC,EAAG,EAAEjB,SAEQ,OAAZ7B,QAAY,IAAZA,OAAY,EAAZA,EAAc+C,KAAKC,IAClBvB,EAAAA,EAAAA,MAACwB,EAAAA,GAAQ,CAEPN,QAAQ,QACRO,aAAc,GACdR,OAAO,kBACPS,cAAc,OACdN,EAAG,EAAEhB,SAAA,EAELK,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACE,WAAW,MAAML,UAAU,QAAQY,MAAM,WAAUf,SACtDmB,EAAKI,SAER3B,EAAAA,EAAAA,MAACU,EAAAA,EAAI,CAACH,UAAU,QAAOH,SAAA,CAAC,IACpBmB,EAAKK,OAAO,UAAQ,IACrBC,KAAKC,QACH,IAAIC,MAAOC,UAAY,IAAID,KAAKR,EAAKU,YAAYD,WAAS,OAE1D,IAAI,eAGThC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACiC,WAAW,SAAS/B,SAAS,OAAMC,SAAA,EACvCK,EAAAA,EAAAA,KAAC0B,EAAAA,EAAI,CACHC,KAAMb,EAAKc,KAAKC,SAChBC,OAAO,QACPC,OAAQ,CAAEC,eAAgB,QAASrC,SAElCmB,EAAKc,KAAKK,SAEbjC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACzB,IAAKD,KACXgB,EAAAA,EAAAA,MAACU,EAAAA,EAAI,CAAAN,SAAA,CAAC,aAAWmB,EAAKoB,iBA3BnBpB,EAAKqB,aAiCb,EClCX,EA5JuBC,KACrB,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAa,KAC1CC,EAAcC,IAAmBF,EAAAA,EAAAA,UAAa,IAE/CnE,GAAWC,EAAAA,EAAAA,MAEXb,GAAWc,EAAAA,EAAAA,IAAYjB,GACvBW,GAAQM,EAAAA,EAAAA,IAAYP,GAqD1B,SAAS2E,EAAaC,GACpB,IAAI3E,EAIJ,OAHK2E,IACH3E,EAAQ,mBAEHA,CACT,CAEA,MAAM4E,EACJpF,GACAA,EAASqF,MAAMZ,MAAMa,OAAO,GAAGC,cAC7BvF,EAASqF,MAAMZ,MAAMe,MAAM,GAAGC,cAE5BC,EACJ1F,GACAA,EAAS2F,KAAKL,OAAO,GAAGC,cACtBvF,EAAS2F,KAAKH,MAAM,GAAGC,cAErBG,EAAQ5F,GAAY4D,KAAKiC,MAAM7F,EAAS8F,iBAAmB,KAEjE,OACE/D,EAAAA,EAAAA,MAAAgE,EAAAA,SAAA,CAAA5D,SAAA,EACEK,EAAAA,EAAAA,KAACwD,EAAAA,GAAM,CAACC,cAzEkB,CAAEC,IAAK,IAyEKC,SAvEzBC,MAAOC,EAAuB5F,KAA0B,IAAxB,UAAE6F,GAAgB7F,EACjE,MAAM,IAAEyF,GAAQG,EAChB,IACE,MACME,EADQ,yCACMC,KAAKN,GACzB,IAAKK,EACH,OAAO3F,GAAS6F,EAAAA,EAAAA,IAAS,kCAG3B,MAAO,CAAEpB,EAAOqB,GAAQH,EAElBI,QAAiBC,EAAAA,EAAMC,IAAI,gCAADC,OACEzB,EAAK,KAAAyB,OAAIJ,GAEzC,CACEK,QAAS,CACPC,cAAc,GAADF,OAAKG,CAAAA,SAAAA,aAAAA,WAAAA,eAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,2BAK9BC,QAA2BP,EAAAA,EAAMC,IAAI,gCAADC,OACRzB,EAAK,KAAAyB,OAAIJ,EAAI,mCAC7C,CACEK,QAAS,CACPC,cAAc,GAADF,OAAKG,CAAAA,SAAAA,aAAAA,WAAAA,eAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,2BAK9BE,QAA6BR,EAAAA,EAAMC,IAAI,gCAADC,OACVzB,EAAK,KAAAyB,OAAIJ,EAAI,qCAC7C,CACEK,QAAS,CACPC,cAAc,GAADF,OAAKG,CAAAA,SAAAA,aAAAA,WAAAA,eAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,2BAKpCtG,GAASyG,EAAAA,EAAAA,IAAYV,EAASW,OAC9BxC,EAAcqC,EAAmBG,MACjCrC,EAAgBmC,EAAqBE,MACrC1G,GAAS6F,EAAAA,EAAAA,IAAS,MACpB,CAAE,MAAOjG,GACPI,GAAS6F,EAAAA,EAAAA,IAAS,iCACpB,CACAH,GAAW,EAyBgDnE,SACtDA,KACCK,EAAAA,EAAAA,KAAC+E,EAAAA,GAAI,CAAApF,UACHJ,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACHwF,eAAe,SACfvD,WAAW,SACXhC,IAAK,EACLS,GAAI,EACJ+E,SAAS,WAAUtF,SAAA,EAEnBK,EAAAA,EAAAA,KAACkF,EAAAA,GAAK,CAAC/B,KAAK,MAAMgC,SAAUzC,EAAa/C,SACtCyF,IAAA,IAAC,MAAEC,EAAK,KAAEC,GAAkBF,EAAA,OAC3B7F,EAAAA,EAAAA,MAACgG,EAAAA,GAAW,CACVC,YAAaF,EAAKG,OAAOtC,QAAUmC,EAAKI,QAAQvC,KAAKxD,SAAA,EAErDK,EAAAA,EAAAA,KAAC2F,EAAAA,EAAK,IACAN,EACJO,YAAY,iBACZC,MAAM,OACNlF,EAAG,EACHH,OAAO,iBACPQ,aAAc,EACd8E,UAAU,mBACVrF,QAAQ,YAEmB,kBAArB6E,EAAKG,OAAOtC,OAClBnD,EAAAA,EAAAA,KAAC+F,EAAAA,GAAgB,CAAApG,SAAE2F,EAAKG,OAAOtC,SAErB,KAGlBnD,EAAAA,EAAAA,KAACgG,EAAAA,EAAM,CACLC,KAAK,SACLzF,OAAO,iBACPQ,aAAc,EACd8E,UAAU,mBACVrF,QAAQ,UACRyF,QAAQ,YAAWvG,SACpB,uBAORnC,IACC+B,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACiC,WAAW,SAASvB,GAAI,GAAGP,SAAA,EAC/BJ,EAAAA,EAAAA,MAACU,EAAAA,EAAI,CAACS,MAAM,WAAWP,WAAW,MAAMgG,GAAI,EAAExG,SAAA,EAC5CK,EAAAA,EAAAA,KAAC0B,EAAAA,EAAI,CACHC,KAAMnE,EAASqF,MAAMhB,SACrBC,OAAO,QACPC,OAAQ,CAAEC,eAAgB,QAASrC,SAElCiD,IACK,IACP,IAAK,KACN5C,EAAAA,EAAAA,KAAC0B,EAAAA,EAAI,CACHC,KAAMnE,EAASqE,SACfC,OAAO,QACPC,OAAQ,CAAEC,eAAgB,QAASrC,SAElCuD,QAGLlD,EAAAA,EAAAA,KAACoG,EAAAA,EAAQ,CAAC1F,MAAM,aAAayF,GAAI,KACjC5G,EAAAA,EAAAA,MAACU,EAAAA,EAAI,CAACE,WAAW,MAAKR,SAAA,CAAEyD,EAAM,iBAGjCpF,IAASgC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACS,MAAM,UAASf,SAAE3B,IAChCR,IAAYwC,EAAAA,EAAAA,KAACqG,EAAU,CAACnI,KAAMmE,EAAYlE,MAAOqE,MACjD,ECjKP,EAXa8D,KAET/G,EAAAA,EAAAA,MAACgH,EAAAA,EAAS,CAACnG,GAAG,UAAUoG,KAAK,eAAe7F,EAAG,EAAEhB,SAAA,EAC/CK,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACG,GAAG,KAAKqG,SAAS,MAAMtG,WAAW,OAAOD,GAAI,GAAGP,SAAC,mCAGvDK,EAAAA,EAAAA,KAACoC,EAAU,OCCjB,EARiBsE,KAEb1G,EAAAA,EAAAA,KAAAuD,EAAAA,SAAA,CAAA5D,UACEK,EAAAA,EAAAA,KAACsG,EAAI,K","sources":["redux/selectors.ts","components/IssuesList.tsx","components/FormSearch.tsx","components/Home.tsx","pages/HomePage.tsx"],"sourcesContent":["import { IState } from \"./issuesSlice\";\n\nexport const selectRepoData = (state: { issues: IState }) =>\n  state.issues.repoData;\n\nexport const selectOpenIssues = (state: { issues: IState }) =>\n  state.issues.openIssues;\n\nexport const selectAssigneeIssues = (state: { issues: IState }) =>\n  state.issues.assigneeIssues;\n\nexport const selectClosedIssues = (state: { issues: IState }) =>\n  state.issues.closedIssues;\n\nexport const selectIsLoading = (state: { issues: IState }) =>\n  state.issues.isLoading;\n\nexport const selectError = (state: { issues: IState }) => state.issues.error;\n","import {\n  Box,\n  Flex,\n  Link,\n  ListItem,\n  Text,\n  UnorderedList,\n} from \"@chakra-ui/react\";\nimport { css } from \"@emotion/react\";\nimport { FC, useEffect } from \"react\";\nimport { IIssues } from \"../types\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  setAssigneeIssues,\n  setClosedIssues,\n  setOpenIssues,\n} from \"../redux/issuesSlice\";\nimport { useSelector } from \"react-redux\";\nimport {\n  selectAssigneeIssues,\n  selectClosedIssues,\n  selectOpenIssues,\n} from \"../redux/selectors\";\n\ninterface IProps {\n  open: IIssues[];\n  close: IIssues[];\n}\n\nconst IssuesList: FC<IProps> = ({ open, close }) => {\n  const dispatch = useDispatch();\n\n  const openIssues = useSelector(selectOpenIssues);\n  const closedIssues = useSelector(selectClosedIssues);\n  const assigneeIssues = useSelector(selectAssigneeIssues);\n\n  const stroke = css`\n    display: inline;\n    font-size: 16px;\n    border: 1px solid rgba(17, 16, 28, 0.3);\n    margin: 0 10px;\n    height: 16px;\n  `;\n\n  useEffect(() => {\n    const openIssues = open.filter(\n      (obj) => !obj.hasOwnProperty(\"pull_request\")\n    );\n    dispatch(setOpenIssues(openIssues));\n\n    const closedIssues = close.filter(\n      (obj) => !obj.hasOwnProperty(\"pull_request\")\n    );\n    dispatch(setClosedIssues(closedIssues));\n\n    const assigneeIssues = openIssues.filter((i) => i.assignee !== null);\n    dispatch(setAssigneeIssues(assigneeIssues));\n  }, [close, open, dispatch]);\n\n  const flexWrapCondition = window.innerWidth <= 1000 ? \"wrap\" : \"nowrap\";\n\n  return (\n    <Flex gap={5} flexWrap={flexWrapCondition}>\n      <Box flex=\"1\" textAlign=\"center\" minWidth=\"280px\">\n        <Text mb={5} fontWeight=\"700\" as=\"h2\">\n          ToDo\n        </Text>\n        <UnorderedList\n          display=\"flex\"\n          flexDirection=\"column\"\n          gap={5}\n          textAlign=\"center\"\n          border=\"1px solid black\"\n          bgColor=\"gray.300\"\n          color=\"gray.500\"\n          p={5}\n          m={0}\n        >\n          {openIssues?.map((item) => (\n            <ListItem\n              key={item.id}\n              bgColor=\"white\"\n              borderRadius={20}\n              border=\"1px solid black\"\n              listStyleType=\"none\"\n              p={4}\n            >\n              <Text fontWeight=\"700\" textAlign=\"start\" color=\"gray.800\">\n                {item.title}\n              </Text>\n              <Text textAlign=\"start\">\n                #{item.number} opened{\" \"}\n                {Math.floor(\n                  (new Date().getTime() - new Date(item.created_at).getTime()) /\n                    (3600 * 24 * 1000)\n                )}{\" \"}\n                days ago\n              </Text>\n              <Flex alignItems=\"center\" flexWrap=\"wrap\">\n                <Link\n                  href={item.user.html_url}\n                  target=\"blank\"\n                  _hover={{ textDecoration: \"none\" }}\n                >\n                  {item.user.login}\n                </Link>\n                <Text css={stroke}></Text>\n                <Text>Comments: {item.comments}</Text>\n              </Flex>\n            </ListItem>\n          ))}\n        </UnorderedList>\n      </Box>\n      <Box flex=\"1\" textAlign=\"center\" minWidth=\"280px\">\n        <Text mb={5} fontWeight=\"700\" as=\"h2\">\n          In Progress\n        </Text>\n        <UnorderedList\n          display=\"flex\"\n          flexDirection=\"column\"\n          gap={5}\n          textAlign=\"center\"\n          border=\"1px solid black\"\n          bgColor=\"gray.300\"\n          color=\"gray.500\"\n          p={5}\n          m={0}\n        >\n          {assigneeIssues?.map((item) => (\n            <ListItem\n              key={item.id}\n              bgColor=\"white\"\n              borderRadius={20}\n              border=\"1px solid black\"\n              listStyleType=\"none\"\n              p={4}\n            >\n              <Text fontWeight=\"700\" textAlign=\"start\" color=\"gray.800\">\n                {item.title}\n              </Text>\n              <Text textAlign=\"start\">\n                #{item.number} opened{\" \"}\n                {Math.floor(\n                  (new Date().getTime() - new Date(item.created_at).getTime()) /\n                    (3600 * 24 * 1000)\n                )}{\" \"}\n                days ago\n              </Text>\n              <Flex alignItems=\"center\" flexWrap=\"wrap\">\n                <Link\n                  href={item.user.html_url}\n                  target=\"blank\"\n                  _hover={{ textDecoration: \"none\" }}\n                >\n                  {item.user.login}\n                </Link>\n                <Text css={stroke}></Text>\n                <Text>Comments: {item.comments}</Text>\n              </Flex>\n            </ListItem>\n          ))}\n        </UnorderedList>\n      </Box>\n      <Box flex=\"1\" textAlign=\"center\" minWidth=\"280px\">\n        <Text mb={5} fontWeight=\"700\" as=\"h2\">\n          Done\n        </Text>\n        <UnorderedList\n          display=\"flex\"\n          flexDirection=\"column\"\n          gap={5}\n          textAlign=\"center\"\n          border=\"1px solid black\"\n          bgColor=\"gray.300\"\n          color=\"gray.500\"\n          p={5}\n          m={0}\n        >\n          {closedIssues?.map((item) => (\n            <ListItem\n              key={item.id}\n              bgColor=\"white\"\n              borderRadius={20}\n              border=\"1px solid black\"\n              listStyleType=\"none\"\n              p={4}\n            >\n              <Text fontWeight=\"700\" textAlign=\"start\" color=\"gray.800\">\n                {item.title}\n              </Text>\n              <Text textAlign=\"start\">\n                #{item.number} opened{\" \"}\n                {Math.floor(\n                  (new Date().getTime() - new Date(item.created_at).getTime()) /\n                    (3600 * 24 * 1000)\n                )}{\" \"}\n                days ago\n              </Text>\n              <Flex alignItems=\"center\" flexWrap=\"wrap\">\n                <Link\n                  href={item.user.html_url}\n                  target=\"blank\"\n                  _hover={{ textDecoration: \"none\" }}\n                >\n                  {item.user.login}\n                </Link>\n                <Text css={stroke}></Text>\n                <Text>Comments: {item.comments}</Text>\n              </Flex>\n            </ListItem>\n          ))}\n        </UnorderedList>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default IssuesList;\n","import { Formik, Field, Form, FieldProps } from \"formik\";\nimport { FC, useState } from \"react\";\nimport {\n  Button,\n  Flex,\n  FormControl,\n  FormErrorMessage,\n  Input,\n  Link,\n  Text,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { StarIcon } from \"@chakra-ui/icons\";\nimport IssuesList from \"./IssuesList\";\nimport { useDispatch } from \"react-redux\";\nimport { setError, setRepoData } from \"../redux/issuesSlice\";\nimport { useSelector } from \"react-redux\";\nimport { selectError, selectRepoData } from \"../redux/selectors\";\n\ninterface IForms {\n  url: string;\n}\n\nconst FormSearch: FC = () => {\n  const [issuesOpen, setIssuesOpen] = useState<[]>([]);\n  const [issuesClosed, setIssuesClosed] = useState<[]>([]);\n\n  const dispatch = useDispatch();\n\n  const repoData = useSelector(selectRepoData);\n  const error = useSelector(selectError);\n\n  const initialValues: IForms = { url: \"\" };\n\n  const onSubmit = async (values: { url: string }, { resetForm }: any) => {\n    const { url } = values;\n    try {\n      const regex = /https:\\/\\/github.com\\/([^/]+)\\/([^/]+)/;\n      const match = regex.exec(url);\n      if (!match) {\n        return dispatch(setError(\"Invalid GitHub repository URL\"));\n      }\n\n      const [, owner, repo] = match;\n\n      const response = await axios.get(\n        `https://api.github.com/repos/${owner}/${repo}`,\n\n        {\n          headers: {\n            Authorization: `${process.env.REACT_APP_ISSUES_TOKEN}`,\n          },\n        }\n      );\n\n      const responseIssuesOpen = await axios.get(\n        `https://api.github.com/repos/${owner}/${repo}/issues?state=open&per_page=100`,\n        {\n          headers: {\n            Authorization: `${process.env.REACT_APP_ISSUES_TOKEN}`,\n          },\n        }\n      );\n\n      const responseIssuesClosed = await axios.get(\n        `https://api.github.com/repos/${owner}/${repo}/issues?state=closed&per_page=100`,\n        {\n          headers: {\n            Authorization: `${process.env.REACT_APP_ISSUES_TOKEN}`,\n          },\n        }\n      );\n\n      dispatch(setRepoData(response.data));\n      setIssuesOpen(responseIssuesOpen.data);\n      setIssuesClosed(responseIssuesClosed.data);\n      dispatch(setError(null));\n    } catch (error) {\n      dispatch(setError(\"Invalid GitHub repository URL\"));\n    }\n    resetForm();\n  };\n\n  function validateName(value: string) {\n    let error;\n    if (!value) {\n      error = \"URL is required\";\n    }\n    return error;\n  }\n\n  const ownerName =\n    repoData &&\n    repoData.owner.login.charAt(0).toUpperCase() +\n      repoData.owner.login.slice(1).toLowerCase();\n\n  const nameRepo =\n    repoData &&\n    repoData.name.charAt(0).toUpperCase() +\n      repoData.name.slice(1).toLowerCase();\n\n  const stars = repoData && Math.round(repoData.stargazers_count / 1000);\n\n  return (\n    <>\n      <Formik initialValues={initialValues} onSubmit={onSubmit}>\n        {() => (\n          <Form>\n            <Flex\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              gap={5}\n              mb={3}\n              position=\"relative\"\n            >\n              <Field name=\"url\" validate={validateName}>\n                {({ field, form }: FieldProps) => (\n                  <FormControl\n                    isInvalid={!!form.errors.name && !!form.touched.name}\n                  >\n                    <Input\n                      {...field}\n                      placeholder=\"Enter repo URL\"\n                      width=\"100%\"\n                      p={3}\n                      border=\"2px solid #000\"\n                      borderRadius={8}\n                      boxShadow=\"2px 2px 2px #ccc\"\n                      bgColor=\"#f2f2f2\"\n                    />\n                    {typeof form.errors.name === \"string\" && (\n                      <FormErrorMessage>{form.errors.name}</FormErrorMessage>\n                    )}\n                  </FormControl>\n                )}\n              </Field>\n              <Button\n                type=\"submit\"\n                border=\"2px solid #000\"\n                borderRadius={8}\n                boxShadow=\"2px 2px 2px #ccc\"\n                bgColor=\"#f2f2f2\"\n                padding=\"10px 20px\"\n              >\n                Load issues\n              </Button>\n            </Flex>\n          </Form>\n        )}\n      </Formik>\n      {repoData && (\n        <Flex alignItems=\"center\" mb={12}>\n          <Text color=\"blue.500\" fontWeight=\"700\" mr={5}>\n            <Link\n              href={repoData.owner.html_url}\n              target=\"blank\"\n              _hover={{ textDecoration: \"none\" }}\n            >\n              {ownerName}\n            </Link>{\" \"}\n            {\">\"}{\" \"}\n            <Link\n              href={repoData.html_url}\n              target=\"blank\"\n              _hover={{ textDecoration: \"none\" }}\n            >\n              {nameRepo}\n            </Link>\n          </Text>\n          <StarIcon color=\"orange.300\" mr={1} />\n          <Text fontWeight=\"700\">{stars} K stars</Text>\n        </Flex>\n      )}\n      {error && <Text color=\"red.500\">{error}</Text>}\n      {repoData && <IssuesList open={issuesOpen} close={issuesClosed} />}\n    </>\n  );\n};\n\nexport default FormSearch;\n","import { Container, Text } from \"@chakra-ui/react\";\nimport FormSearch from \"./FormSearch\";\n\nconst Home = () => {\n  return (\n    <Container as=\"section\" maxW=\"container.xl\" p={5}>\n      <Text as=\"h1\" fontSize=\"2xl\" fontWeight=\"bold\" mb={10}>\n        GitHub Issue Management Board\n      </Text>\n      <FormSearch />\n    </Container>\n  );\n};\n\nexport default Home;\n","import Home from \"../components/Home\";\n\nconst HomePage = () => {\n  return (\n    <>\n      <Home />\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["selectRepoData","state","issues","repoData","selectOpenIssues","openIssues","selectAssigneeIssues","assigneeIssues","selectClosedIssues","closedIssues","selectError","error","_ref","open","close","dispatch","useDispatch","useSelector","stroke","css","_templateObject","_taggedTemplateLiteral","useEffect","filter","obj","hasOwnProperty","setOpenIssues","setClosedIssues","i","assignee","setAssigneeIssues","flexWrapCondition","window","innerWidth","_jsxs","Flex","gap","flexWrap","children","Box","flex","textAlign","minWidth","_jsx","Text","mb","fontWeight","as","UnorderedList","display","flexDirection","border","bgColor","color","p","m","map","item","ListItem","borderRadius","listStyleType","title","number","Math","floor","Date","getTime","created_at","alignItems","Link","href","user","html_url","target","_hover","textDecoration","login","comments","id","FormSearch","issuesOpen","setIssuesOpen","useState","issuesClosed","setIssuesClosed","validateName","value","ownerName","owner","charAt","toUpperCase","slice","toLowerCase","nameRepo","name","stars","round","stargazers_count","_Fragment","Formik","initialValues","url","onSubmit","async","values","resetForm","match","exec","setError","repo","response","axios","get","concat","headers","Authorization","process","REACT_APP_ISSUES_TOKEN","responseIssuesOpen","responseIssuesClosed","setRepoData","data","Form","justifyContent","position","Field","validate","_ref2","field","form","FormControl","isInvalid","errors","touched","Input","placeholder","width","boxShadow","FormErrorMessage","Button","type","padding","mr","StarIcon","IssuesList","Home","Container","maxW","fontSize","HomePage"],"sourceRoot":""}