{"version":3,"file":"static/js/70.592f7868.chunk.js","mappings":"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","sources":["components/IssuesList.tsx","components/FormSearch.tsx","components/Home.tsx","pages/HomePage.tsx"],"sourcesContent":["import {\n  Box,\n  Flex,\n  Link,\n  ListItem,\n  Text,\n  UnorderedList,\n} from \"@chakra-ui/react\";\nimport { css } from \"@emotion/react\";\nimport { FC } from \"react\";\n\ninterface IProps {\n  open: Arr[];\n  close: Arr[];\n}\n\ninterface Arr {\n  id: number;\n  pull_request: {};\n  state: string;\n  title: string;\n  number: number;\n  created_at: string;\n  user: {\n    login: string;\n    html_url: string;\n  };\n  comments: number;\n}\n\nconst IssuesList: FC<IProps> = ({ open, close }) => {\n  console.log(open);\n\n  const boxStyles = css`\n    width: calc(1280px / 2 - 2 * 20px);\n    text-align: center;\n  `;\n\n  const stroke = css`\n    display: inline;\n    font-size: 10px;\n    border: 1px solid rgba(17, 16, 28, 0.3);\n    margin: 0 10px;\n    height: 10px;\n  `;\n\n  const openIssues = open.filter((obj) => !obj.hasOwnProperty(\"pull_request\"));\n\n  const closeIssues = close.filter(\n    (obj) => !obj.hasOwnProperty(\"pull_request\")\n  );\n\n  return (\n    <Flex gap={5}>\n      <Box css={boxStyles}>\n        <Text mb={5}>ToDo</Text>\n        <UnorderedList\n          display=\"flex\"\n          flexDirection=\"column\"\n          gap={5}\n          textAlign=\"center\"\n          border=\"1px solid black\"\n          bgColor=\"gray.300\"\n          p={5}\n          m={0}\n        >\n          {openIssues?.map((item) => (\n            <ListItem\n              key={item.id}\n              bgColor=\"white\"\n              borderRadius={20}\n              border=\"1px solid black\"\n              listStyleType=\"none\"\n            >\n              <Text>{item.title}</Text>\n              <Text>#{item.number}</Text>\n              <Text>\n                opened{\" \"}\n                {new Date().getDate() - new Date(item.created_at).getDate()}{\" \"}\n                days ago\n              </Text>\n              <Link href={item.user.html_url}>{item.user.login}</Link>\n              <Text css={stroke}></Text>\n              <Text>Comments: {item.comments}</Text>\n            </ListItem>\n          ))}\n        </UnorderedList>\n      </Box>\n      <Box css={boxStyles}>\n        <Text mb={5}>In Progress</Text>\n        <Box\n          textAlign=\"center\"\n          border=\"1px solid black\"\n          bgColor=\"gray.300\"\n        ></Box>\n      </Box>\n      <Box css={boxStyles}>\n        <Text mb={5}>Done</Text>\n        <UnorderedList\n          display=\"flex\"\n          flexDirection=\"column\"\n          gap={5}\n          textAlign=\"center\"\n          border=\"1px solid black\"\n          bgColor=\"gray.300\"\n          p={5}\n          m={0}\n        >\n          {closeIssues?.map((item) => (\n            <ListItem\n              key={item.id}\n              bgColor=\"white\"\n              borderRadius={20}\n              border=\"1px solid black\"\n              listStyleType=\"none\"\n            >\n              <Text>{item.title}</Text>\n              <Text>#{item.number}</Text>\n              <Text>\n                opened{\" \"}\n                {new Date().getDate() - new Date(item.created_at).getDate()}{\" \"}\n                days ago\n              </Text>\n              <Link href={item.user.html_url}>{item.user.login}</Link>\n              <Text css={stroke}></Text>\n              <Text>Comments: {item.comments}</Text>\n            </ListItem>\n          ))}\n        </UnorderedList>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default IssuesList;\n","import { Formik, Field, Form, FieldProps } from \"formik\";\nimport { FC, useState } from \"react\";\nimport { css } from \"@emotion/react\";\nimport {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormErrorMessage,\n  Input,\n  Text,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { StarIcon } from \"@chakra-ui/icons\";\nimport IssuesList from \"./IssuesList\";\n\ninterface IForms {\n  url: string;\n}\n\ninterface IRepoData {\n  name: string;\n  owner: {\n    login: string;\n  };\n  stargazers_count: number;\n}\n\nconst FormSearch: FC = () => {\n  const [repoData, setRepoData] = useState<IRepoData | null>(null);\n  const [issuesOpenArr, setIssuesOpenArr] = useState<[]>([]);\n  const [issuesClosedArr, setIssuesClosedArr] = useState<[]>([]);\n  const [error, setError] = useState<string | null>(null);\n\n  const initialValues: IForms = { url: \"\" };\n\n  const onSubmit = async (values: { url: string }, { resetForm }: any) => {\n    const { url } = values;\n    try {\n      // Виділяємо власника та ім'я репозиторію з URL\n      const regex = /https:\\/\\/github.com\\/([^/]+)\\/([^/]+)/;\n      const match = regex.exec(url);\n      if (!match) {\n        return setError(\"Invalid GitHub repository URL\");\n      }\n\n      const [, owner, repo] = match;\n\n      // Виконати запит до GitHub API для отримання даних репозиторію\n      const response = await axios.get(\n        `https://api.github.com/repos/${owner}/${repo}`,\n\n        {\n          headers: {\n            Authorization: `${process.env.REACT_APP_ISSUES_TOKEN}`,\n          },\n        }\n      );\n      // Виконати запит до GitHub API для отримання даних issues\n\n      const responseIssuesOpen = await axios.get(\n        `https://api.github.com/repos/${owner}/${repo}/issues?state=open`,\n        {\n          headers: {\n            Authorization: `${process.env.REACT_APP_ISSUES_TOKEN}`,\n          },\n        }\n      );\n\n      const responseIssuesClosed = await axios.get(\n        `https://api.github.com/repos/${owner}/${repo}/issues?state=closed`,\n        {\n          headers: {\n            Authorization: `${process.env.REACT_APP_ISSUES_TOKEN}`,\n          },\n        }\n      );\n      setRepoData(response.data);\n      setIssuesOpenArr(responseIssuesOpen.data);\n      setIssuesClosedArr(responseIssuesClosed.data);\n      setError(null);\n    } catch (error) {\n      console.error(\"Failed to fetch repository data:\", error);\n      setError(\"Invalid GitHub repository URL\");\n    }\n    resetForm();\n  };\n\n  const formStyles = css`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 20px;\n    position: relative;\n    margin-bottom: 10px;\n  `;\n\n  const inputStyles = css`\n    width: 100%;\n    padding: 10px;\n    border: 2px solid black;\n    border-radius: 8px;\n    box-shadow: 2px 2px 2px #ccc;\n    font-family: \"Handwriting\", sans-serif;\n    font-size: 16px;\n    line-height: 1.25;\n  `;\n\n  const buttonStyles = css`\n    background-color: #f2f2f2;\n    border: 2px solid black;\n    border-radius: 8px;\n    padding: 10px 20px;\n    font-family: \"Handwriting\", sans-serif;\n    box-shadow: 2px 2px 2px #ccc;\n    cursor: pointer;\n  `;\n\n  function validateName(value: string) {\n    let error;\n    if (!value) {\n      error = \"URL is required\";\n    }\n    return error;\n  }\n\n  const ownerName =\n    repoData &&\n    repoData.owner.login.charAt(0).toUpperCase() +\n      repoData.owner.login.slice(1).toLowerCase();\n\n  const nameRepo =\n    repoData &&\n    repoData.name.charAt(0).toUpperCase() +\n      repoData.name.slice(1).toLowerCase();\n\n  const stars = repoData && Math.round(repoData.stargazers_count / 1000);\n\n  return (\n    <>\n      <Formik initialValues={initialValues} onSubmit={onSubmit}>\n        {() => (\n          <Form>\n            <Box css={formStyles}>\n              <Field name=\"url\" validate={validateName}>\n                {({ field, form }: FieldProps) => (\n                  <FormControl\n                    isInvalid={!!form.errors.name && !!form.touched.name}\n                  >\n                    <Input\n                      {...field}\n                      placeholder=\"Enter repo URL\"\n                      css={inputStyles}\n                    />\n                    {typeof form.errors.name === \"string\" && (\n                      <FormErrorMessage>{form.errors.name}</FormErrorMessage>\n                    )}\n                  </FormControl>\n                )}\n              </Field>\n              <Button type=\"submit\" css={buttonStyles}>\n                Load issues\n              </Button>\n            </Box>\n          </Form>\n        )}\n      </Formik>\n      {repoData && (\n        <Flex alignItems=\"center\" mb={12}>\n          <Text color=\"blue.500\" fontWeight=\"700\" mr={5}>\n            {ownerName} {\">\"} {nameRepo}\n          </Text>\n          <StarIcon color=\"orange.300\" mr={1} />\n          <Text fontWeight=\"700\">{stars} K stars</Text>\n        </Flex>\n      )}\n      {error && <Text color=\"red.500\">{error}</Text>}\n      {repoData && <IssuesList open={issuesOpenArr} close={issuesClosedArr} />}\n    </>\n  );\n};\n\nexport default FormSearch;\n","import { Container } from \"@chakra-ui/react\";\nimport FormSearch from \"./FormSearch\";\n\nconst Home = () => {\n  return (\n    <Container as=\"section\" maxW=\"container.xl\" p={5}>\n      <FormSearch />\n    </Container>\n  );\n};\n\nexport default Home;\n","import Home from \"../components/Home\";\n\nconst HomePage = () => {\n  return (\n    <>\n      <Home />\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["_ref","open","close","console","log","boxStyles","css","_templateObject","_taggedTemplateLiteral","stroke","_templateObject2","openIssues","filter","obj","hasOwnProperty","closeIssues","_jsxs","Flex","gap","children","Box","_jsx","Text","mb","UnorderedList","display","flexDirection","textAlign","border","bgColor","p","m","map","item","ListItem","borderRadius","listStyleType","title","number","Date","getDate","created_at","Link","href","user","html_url","login","comments","id","FormSearch","repoData","setRepoData","useState","issuesOpenArr","setIssuesOpenArr","issuesClosedArr","setIssuesClosedArr","error","setError","formStyles","inputStyles","buttonStyles","_templateObject3","validateName","value","ownerName","owner","charAt","toUpperCase","slice","toLowerCase","nameRepo","name","stars","Math","round","stargazers_count","_Fragment","Formik","initialValues","url","onSubmit","async","values","resetForm","match","exec","repo","response","axios","get","concat","headers","Authorization","process","REACT_APP_ISSUES_TOKEN","responseIssuesOpen","responseIssuesClosed","data","Form","Field","validate","_ref2","field","form","FormControl","isInvalid","errors","touched","Input","placeholder","FormErrorMessage","Button","type","alignItems","color","fontWeight","mr","StarIcon","IssuesList","Home","Container","as","maxW","HomePage"],"sourceRoot":""}